# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

name: Angular & Java tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  angular:
    name: Angular Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3

      # Backend tests
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run Java tests
        run: mvn clean verify
        working-directory: back

      - name: Upload Java Coverage Report
        uses: actions/upload-artifact@v4
        with:
            name: java-coverage-report
            path: back/target/site/jacoco/

      # Frontend tests
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: front
        
      - name: Run tests
        run: npm run test:ci
        working-directory: front

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: angular-coverage-report
          path: front/coverage/

      - name: Build
        run: npm run build
        working-directory: front

      # SonarCloud analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: Run SonarCloud Analysis
        run: sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}

